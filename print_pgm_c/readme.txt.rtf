{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 **************************************\
*     Procedural Programming     *\
*	    Coursework 2              *\
*	Dr Hamish Carr    	        *\
*       200959739.Bartosz Haza  *\
*				        *	        \
**************************************\
\
I was required to read and write a program that will read a .pgm file for the first part I was meant to pass command-line arguments, so depending on what is entered in the command line it will act accordingly, for example if a file is not existent it will print out an error. Also if there are not enough or too many arguments then it will also print a prompt telling the user of this situation. Then for the second part I was required to print in the files ASCII and Binary using fread() and printf() this was one of the most complex activities within the coursework as it lead on to the other parts of the coursework so if this part didn\'92t work the other wouldn\'92t. When it came to the third part it came to reading a file and them writing it to a new file with the ending .pgm then I would open the file using gimp to see if it would print the exact picture, this also meant converting the file from binary to ASCII so the file would not have a magic number of P5 anymore but P2 instead. As P2 is the ASCII version of a file. When it came the modular programming and the part 4 I wasn\'92t able to complete these parts as I found these trickier than the other parts and wasn\'92t able to successfully complete these parts.\
\
The running procedure is to unzip the file in where the folder is held and access the document which is (200959739_A02) you would do this through the terminal using the \'93cd\'94 command. To compile and run the program do the following:\
\
gcc -o pgmb2pgmt pgmb2pgmt.c\
\
and then execute the program using:\
e.g.\
./pgmb2pgmt smallBinary.pgm or with two parameters smallBinary.pgm bartosz.pgm to write to a new file.\
}